
buildscript {
    repositories.maven {
        url "https://maven.pkg.jetbrains.space/sevenfacette/p/sevenfacette/sevenfacette"
        credentials {
            username = "85dcdf4c-d6cd-486f-85d3-654904e1cf22"
            password = "365171aab3c77e6aa2016b73c29ba738280dd96e94dddfc15e45ef65ffbcec5b"
        }
    }
    repositories.jcenter()
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.0")
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.32'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.0'
    id("maven-publish")
    id("com.jfrog.bintray") version "1.8.4"
    id 'org.jetbrains.dokka' version '1.4.0'
    id("org.sonarqube") version "3.0"
    //id 'io.gitlab.arturbosch.detekt' version '1.7.0'
}

sonarqube {
    properties {
        property "sonar.projectName", "7Facette-Web"
        property "sonar.projectKey", "7Facette-Web"
        property "sonar.organization", "munichbughunter"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectVersion", "v1.0.0"
        property "sonar.kotlin.file.suffixes", "kt"
        property "sonar.project.monorepo.enabled", "true"
        property "sonar.sources", "src/jvmMain, src/jsMain"
        property "sonar.tests", "src/jvmTest/"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/*"
    }
}

repositories {
    maven {
        url "https://maven.pkg.jetbrains.space/sevenfacette/p/sevenfacette/sevenfacette"
        credentials {
            username = "85dcdf4c-d6cd-486f-85d3-654904e1cf22"
            password = "365171aab3c77e6aa2016b73c29ba738280dd96e94dddfc15e45ef65ffbcec5b"
        }
    }
    mavenCentral()
    maven { url "https://dl.bintray.com/aakira/maven" }
    maven { url "https://jitpack.io" }
    maven { url "https://kotlin.bintray.com/kotlinx" }

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    jvm()
    js(IR) {
        useCommonJs()
        nodejs()
        //binaries.executable()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation 'org.postgresql:postgresql:42.2.5'
                implementation 'io.ktor:ktor-client:1.3.0'
                implementation 'io.ktor:ktor-client-json:1.3.0'
                implementation 'io.ktor:ktor-client-core:1.3.0'
                implementation 'io.ktor:ktor-client-auth:1.3.0'
                implementation 'io.ktor:ktor-client-apache:1.3.0'
                implementation 'io.ktor:ktor-client-jackson:1.3.0'
                implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.0'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.0.1'
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.14.0'
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jvmMain {
            dependencies {
                implementation 'org.aeonbits.owner:owner-java8:1.0.9'
                implementation 'org.seleniumhq.selenium:selenium-api:3.141.59'
                implementation 'org.seleniumhq.selenium:selenium-support:3.141.59'
                implementation 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
                implementation 'org.seleniumhq.selenium:selenium-firefox-driver:3.141.59'
                implementation 'io.github.bonigarcia:webdrivermanager:4.0.0'
                implementation 'com.assertthat:selenium-shutterbug:0.9.4'

                implementation "de.p7s1.qa.sevenfacette:core-jvm:1.4.0"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }

        }

//        jsMain {
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
//                implementation 'io.ktor:ktor-client-js:1.3.0'
//                implementation 'io.ktor:ktor-client-core-js:1.3.0'
//                implementation 'io.ktor:ktor-client-json-js:1.3.0'
//                implementation 'io.ktor:ktor-client-auth-js:1.3.0'
//
//                implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.0'
//                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.14.0'
//                implementation "org.jetbrains.kotlinx:kotlinx-nodejs:0.0.7"
//            }
//        }
    }
}

def GROUP_ID="de.p7s1.qa.sevenfacette" // Your orginization in reverse domain notation. For example:  def GROUP_ID="com.fudge"
def ARTIFACT_ID="web" // The name you gave your package in bintray. In our example it would be:  def ARTIFACT_ID="kotlin-awesome-printer"

def BINTRAY_REPOSITORY="sevenfacette-jvm" // What you named your repository in bintray. In our example it would be "myrepository"
//def BINTRAY_ORGINIZATION="guide" //  Your public facing Bintray name. You can see your Bintray name on the top right corner in Bintray. I named it "guide" for our example.

//def ISSUE_URL="https://github.com/natanfudge/KotlinAwesomePrinter/issues" // A link to an issue tracker for the library, in our example: "https://github.com/natanfudge/KotlinAwesomePrinter/issues"
//def SITE_URL="https://github.com/natanfudge/KotlinAwesomePrinter" // A link to the library's site. In our example: "https://github.com/natanfudge/KotlinAwesomePrinter"
//def VCS_URL="https://github.com/natanfudge/KotlinAwesomePrinter.git" // A link to the version control system (where the code is stored). In our example: "https://github.com/natanfudge/KotlinAwesomePrinter.git"

// Only for local TESTING //
def LIBRARY_VERSION_NAME=1.0 // The current version of your library. You will need to update this value whenever you upload a new release. For example: 1.0
//version = "v1.1.2"

version = System.properties['VERSION']
version = version.toString().substring(1,6)
LIBRARY_VERSION_NAME=version.toString().substring(0,3)

afterEvaluate {
    project.publishing.publications.all {
        // rename artifacts
        groupId = GROUP_ID
        if (it.name.contains('metadata')) {
            artifactId = "$ARTIFACT_ID"
        } else {
            artifactId = "$ARTIFACT_ID-$name"
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "de.p7s1.qa.sevenfacette"
            artifactId = "web"
            version = version
        }
    }
    repositories {
        maven {
            url "https://maven.pkg.jetbrains.space/sevenfacette/p/sevenfacette/sevenfacette"
            credentials {
                username = System.getenv("SPACE_ACTOR")
                password = System.getenv("SPACE_TOKEN")
            }
        }
    }
}
